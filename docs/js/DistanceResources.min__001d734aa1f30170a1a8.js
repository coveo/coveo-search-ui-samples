webpackJsonpCoveo__temporary([22],{177:function(t,e,o){"use strict";var i=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])};return function(e,o){function i(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(i.prototype=o.prototype,new i)}}();Object.defineProperty(e,"__esModule",{value:!0});var n=o(2),s=o(142),r=o(9),l=o(6),u=o(7),a=o(101),c=o(1),p=o(26),d=o(3),g=o(382),h=o(383),v=o(384),f=function(t){function e(o,i,n){var s=t.call(this,o,e.ID,n)||this;return s.element=o,s.options=i,s.bindings=n,s.isFirstPositionResolved=!1,s.options=u.ComponentOptions.initComponentOptions(o,e,i),s.registerDistanceQuery(),s.bind.onRootElement(a.InitializationEvents.afterComponentsInitialization,function(){return s.onAfterComponentsInitialization()}),s}return i(e,t),e.prototype.setPosition=function(t,e){this.enable(),this.latitude=t,this.longitude=e;var o={position:{latitude:t,longitude:e}};this.bind.trigger(this.element,s.DistanceEvents.onPositionResolved,o);var i=this.shouldTriggerQueryWhenPositionSet();this.isFirstPositionResolved=!0,i&&this.executeQuery()},e.prototype.getLastPositionRequest=function(){return this.lastPositionRequest||Promise.reject("No position request was executed yet.")},e.prototype.executeQuery=function(){this.pendingSearchEventOnCancellation?(this.usageAnalytics.logSearchEvent(this.getPendingEventOnCancellation(),this.pendingSearchEventOnCancellation.getEventMeta()),delete this.pendingSearchEventOnCancellation):this.usageAnalytics.logSearchEvent(r.analyticsActionCauseList.positionSet,{}),this.queryController.executeQuery()},e.prototype.shouldTriggerQueryWhenPositionSet=function(){var t=this.options.cancelQueryUntilPositionResolved&&!this.isFirstPositionResolved;return this.options.triggerNewQueryOnNewPosition||t},e.prototype.onAfterComponentsInitialization=function(){var t=this,e={providers:this.getProvidersFromOptions()};this.bind.trigger(this.element,s.DistanceEvents.onResolvingPosition,e),this.lastPositionRequest=this.tryGetPositionFromProviders(e.providers).then(function(e){return e?t.setPosition(e.latitude,e.longitude):t.triggerDistanceNotSet(),e}).catch(function(e){t.logger.error("An error occurred while trying to resolve the current position.",e),t.triggerDistanceNotSet()})},e.prototype.getProvidersFromOptions=function(){var t=[];return this.options.useNavigator&&t.push(new g.NavigatorPositionProvider),this.options.googleApiKey&&t.push(new h.GoogleApiPositionProvider(this.options.googleApiKey)),this.options.longitudeValue&&this.options.latitudeValue&&t.push(new v.StaticPositionProvider(this.options.latitudeValue,this.options.longitudeValue)),t},e.prototype.tryGetPositionFromProviders=function(t){var e=this;return new Promise(function(o,i){var n=function(){if(t.length>0){t.shift().getPosition().then(function(t){t.latitude&&t.longitude?o(t):n()}).catch(function(t){e.logger.warn("An error occurred while trying to resolve the position within a position provider.",t),n()})}else o()};n()})},e.prototype.triggerDistanceNotSet=function(){this.isFirstPositionResolved=!0,this.logger.warn("None of the given position providers could resolve the current position. The distance field will not be calculated and the distance components will be disabled until the next call to 'setPosition'."),this.bind.trigger(this.element,s.DistanceEvents.onPositionNotResolved,{}),this.disable(),this.executeQuery()},e.prototype.registerDistanceQuery=function(){var t=this;this.bind.onRootElement(a.QueryEvents.buildingQuery,function(e){if(t.isFirstPositionResolved){if(e&&e.queryBuilder){var o={function:t.getConvertedUnitsFunction("dist("+t.options.latitudeField+", "+t.options.longitudeField+", "+t.latitude+", "+t.longitude+")"),fieldName:""+t.options.distanceField};e.queryBuilder.queryFunctions.push(o),t.enableDistanceComponents()}}else t.options.cancelQueryUntilPositionResolved&&(t.pendingSearchEventOnCancellation=t.usageAnalytics.getPendingSearchEvent(),t.logger.info("Query cancelled, waiting for position."),e.cancel=!0)})},e.prototype.enableDistanceComponents=function(){var t=this;n.$$(this.root).findAll("."+this.options.disabledDistanceCssClass).forEach(function(e){try{e.classList.remove(t.options.disabledDistanceCssClass);var o=p.get(e);o&&o.enable()}catch(o){t.logger.error("Could not re-enable distance component.",o,e)}})},e.prototype.getConvertedUnitsFunction=function(t){return t+"/"+this.options.unitConversionFactor},e.prototype.getPendingEventOnCancellation=function(){return{name:this.pendingSearchEventOnCancellation.templateSearchEvent.actionCause,type:this.pendingSearchEventOnCancellation.templateSearchEvent.actionType}},e.ID="DistanceResources",e.doExport=function(){d.exportGlobally({DistanceResources:e})},e.options={distanceField:u.ComponentOptions.buildFieldOption({required:!0}),latitudeField:u.ComponentOptions.buildFieldOption({required:!0}),longitudeField:u.ComponentOptions.buildFieldOption({required:!0}),unitConversionFactor:u.ComponentOptions.buildNumberOption({defaultValue:1e3,validator:function(t){return!!t&&t>0}}),disabledDistanceCssClass:u.ComponentOptions.buildStringOption({defaultValue:"coveo-distance-disabled"}),latitudeValue:u.ComponentOptions.buildNumberOption({float:!0}),longitudeValue:u.ComponentOptions.buildNumberOption({float:!0}),googleApiKey:u.ComponentOptions.buildStringOption(),useNavigator:u.ComponentOptions.buildBooleanOption(),triggerNewQueryOnNewPosition:u.ComponentOptions.buildBooleanOption({defaultValue:!1}),cancelQueryUntilPositionResolved:u.ComponentOptions.buildBooleanOption({defaultValue:!0})},e}(l.Component);e.DistanceResources=f,c.Initialization.registerAutoCreateComponent(f)},382:function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return t.prototype.getPosition=function(){return new Promise(function(t,e){navigator.geolocation.getCurrentPosition(function(e){t({latitude:e.coords.latitude,longitude:e.coords.longitude})},function(t){e(t)})})},t}();e.NavigatorPositionProvider=i},383:function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=o(65),n=function(){function t(t){this.googleApiKey=t}return t.prototype.getPosition=function(){return(new i.EndpointCaller).call({errorsAsSuccess:!1,method:"POST",queryString:["key="+this.googleApiKey],requestData:{},responseType:"json",url:"https://www.googleapis.com/geolocation/v1/geolocate"}).then(function(t){var e=t.data.location;return{longitude:e.lng,latitude:e.lat}})},t}();e.GoogleApiPositionProvider=n},384:function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e){this.latitude=t,this.longitude=e}return t.prototype.getPosition=function(){return Promise.resolve({longitude:this.longitude,latitude:this.latitude})},t}();e.StaticPositionProvider=i}});