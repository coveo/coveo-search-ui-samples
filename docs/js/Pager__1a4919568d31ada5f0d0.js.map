{"version":3,"sources":["./src/utils/SVGDom.ts","./src/ui/Pager/Pager.ts","./sass/_Pager.scss"],"names":[],"mappings":"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","file":"Pager__1a4919568d31ada5f0d0.js","sourcesContent":["import { IStringMap } from '../rest/GenericParam';\nimport * as _ from 'underscore';\n\nexport class SVGDom {\n  public static addClassToSVGInContainer(svgContainer: HTMLElement, classToAdd: string) {\n    const svgElement = svgContainer.querySelector('svg');\n    svgElement.setAttribute('class', `${SVGDom.getClass(svgElement)}${classToAdd}`);\n  }\n\n  public static removeClassFromSVGInContainer(svgContainer: HTMLElement, classToRemove: string) {\n    const svgElement = svgContainer.querySelector('svg');\n    svgElement.setAttribute('class', SVGDom.getClass(svgElement).replace(classToRemove, ''));\n  }\n\n  public static addStyleToSVGInContainer(svgContainer: HTMLElement, styleToAdd: IStringMap<any>) {\n    const svgElement = svgContainer.querySelector('svg');\n    _.each(styleToAdd, (styleValue, styleKey) => {\n      svgElement.style[styleKey] = styleValue;\n    });\n  }\n\n  private static getClass(svgElement: SVGElement) {\n    const className = svgElement.getAttribute('class');\n    return className ? className + ' ' : '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/SVGDom.ts","import { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { DeviceUtils } from '../../utils/DeviceUtils';\nimport {\n  QueryEvents,\n  INewQueryEventArgs,\n  IBuildingQueryEventArgs,\n  IQuerySuccessEventArgs,\n  INoResultsEventArgs\n} from '../../events/QueryEvents';\nimport { MODEL_EVENTS, IAttributeChangedEventArg } from '../../models/Model';\nimport { QueryStateModel } from '../../models/QueryStateModel';\nimport { QUERY_STATE_ATTRIBUTES } from '../../models/QueryStateModel';\nimport { analyticsActionCauseList, IAnalyticsPagerMeta, IAnalyticsActionCause } from '../Analytics/AnalyticsActionListMeta';\nimport { Initialization } from '../Base/Initialization';\nimport { Assert } from '../../misc/Assert';\nimport { l } from '../../strings/Strings';\nimport { $$ } from '../../utils/Dom';\nimport { KeyboardUtils, KEYBOARD } from '../../utils/KeyboardUtils';\nimport { exportGlobally } from '../../GlobalExports';\nimport { SVGIcons } from '../../utils/SVGIcons';\nimport { SVGDom } from '../../utils/SVGDom';\nimport 'styling/_Pager';\n\nexport interface IPagerOptions {\n  numberOfPages: number;\n  enableNavigationButton: boolean;\n  maxNumberOfPages: number;\n  maximumNumberOfResultsFromIndex: number;\n}\n\n/**\n * The Pager component attaches itself to a `div` element and renders widgets that allow the end user to navigate\n * through the different result pages.\n *\n * This component takes care of triggering a query with the correct result range whenever the end user selects a page or\n * uses the navigation buttons (**Previous** and **Next**).\n */\nexport class Pager extends Component {\n  static ID = 'Pager';\n\n  static doExport = () => {\n    exportGlobally({\n      Pager: Pager\n    });\n  };\n\n  /**\n   * The options for the Pager\n   * @componentOptions\n   */\n  static options: IPagerOptions = {\n    /**\n     * Specifies how many page links to display in the pager.\n     *\n     * Default value is `5` on a desktop computers and `3` on a mobile device. Minimum value is `1`.\n     */\n    numberOfPages: ComponentOptions.buildNumberOption({\n      defaultFunction: () => {\n        if (DeviceUtils.isMobileDevice()) {\n          return 3;\n        } else {\n          return 5;\n        }\n      },\n      min: 1\n    }),\n\n    /**\n     * Specifies whether the **Previous** and **Next** buttons should appear at each end of the pager when appropriate.\n     *\n     * The default value is `true`.\n     */\n    enableNavigationButton: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n\n    /**\n     * Specifies the maximum number of pages to display if enough results are available.\n     *\n     * This property is typically set when the default number of accessible results from the index has been changed from its default value of `1000` (10 results per page X 100 `maxNumberOfPages`).\n     * Default value is `100`\n     *\n     * @deprecated This is a deprecated option. The `Pager` now automatically adapts itself on each new query, so you no longer need to specify a value for this option. However, if the default maximum number of accessible results value was changed on your Coveo index, you should use the [`maximumNumberOfResultsFromIndex`]{@link Pager.options.maximumNumberOfResultsFromIndex} option to specify the new value.\n     */\n    maxNumberOfPages: ComponentOptions.buildNumberOption({\n      defaultValue: undefined,\n      deprecated:\n        'This is a deprecated option. The pager will automatically adapt itself on each new query. You no longer need to specify this option. Use maximumNumberOfResultsFromIndex instead.'\n    }),\n    /**\n     * Specifies the maximum number of results that the index can return for any query.\n     *\n     * Default value is `1000` in a Coveo index.\n     *\n     * If this value was modified in your Coveo index, you must specify the new value in this option for the Pager component to work properly\n     */\n    maximumNumberOfResultsFromIndex: ComponentOptions.buildNumberOption({\n      defaultValue: 1000\n    })\n  };\n\n  /**\n   * The current page (1-based index).\n   */\n  public currentPage: number;\n  private listenToQueryStateChange = true;\n  private ignoreNextQuerySuccess = false;\n\n  // The normal behavior of this component is to reset to page 1 when a new\n  // query is performed by other components (i.e. not pagers).\n  //\n  // This behavior is overridden when the 'first' state is\n  // programmatically modified.\n  private needToReset = true;\n\n  private list: HTMLElement;\n\n  /**\n   * Creates a new Pager. Binds multiple query events ({@link QueryEvents.newQuery}, {@link QueryEvents.buildingQuery},\n   * {@link QueryEvents.querySuccess}, {@link QueryEvents.queryError} and {@link QueryEvents.noResults}. Renders itself\n   * on every query success.\n   * @param element The HTMLElement on which to instantiate the component (normally a `div`).\n   * @param options The options for the Pager component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   */\n  constructor(public element: HTMLElement, public options?: IPagerOptions, bindings?: IComponentBindings) {\n    super(element, Pager.ID, bindings);\n    this.options = ComponentOptions.initComponentOptions(element, Pager, options);\n    this.currentPage = 1;\n\n    this.bind.onRootElement(QueryEvents.newQuery, (args: INewQueryEventArgs) => this.handleNewQuery(args));\n    this.bind.onRootElement(QueryEvents.buildingQuery, (args: IBuildingQueryEventArgs) => this.handleBuildingQuery(args));\n    this.bind.onRootElement(QueryEvents.querySuccess, (args: IQuerySuccessEventArgs) => this.handleQuerySuccess(args));\n    this.bind.onRootElement(QueryEvents.queryError, () => this.handleQueryError());\n    this.bind.onRootElement(QueryEvents.noResults, (args: INoResultsEventArgs) => this.handleNoResults(args));\n    this.bind.onQueryState(MODEL_EVENTS.CHANGE_ONE, QUERY_STATE_ATTRIBUTES.FIRST, (data: IAttributeChangedEventArg) =>\n      this.handleQueryStateModelChanged(data)\n    );\n\n    this.list = document.createElement('ul');\n    $$(this.list).addClass('coveo-pager-list');\n    element.appendChild(this.list);\n  }\n\n  /**\n   * Sets the current page, then executes a query.\n   *\n   * Also logs an event in the usage analytics (`pageNumber` by default) with the new current page number as meta data.\n   *\n   * @param pageNumber The page number to navigate to.\n   * @param analyticCause The event to log in the usage analytics.\n   */\n  public setPage(pageNumber: number, analyticCause: IAnalyticsActionCause = analyticsActionCauseList.pagerNumber) {\n    Assert.exists(pageNumber);\n    this.currentPage = Math.max(Math.min(pageNumber, this.getMaxNumberOfPagesForCurrentResultsPerPage()), 1);\n    this.updateQueryStateModel(this.getFirstResultNumber(this.currentPage));\n    this.usageAnalytics.logCustomEvent<IAnalyticsPagerMeta>(analyticCause, { pagerNumber: this.currentPage }, this.element);\n    this.queryController.executeQuery({\n      ignoreWarningSearchEvent: true,\n      keepLastSearchUid: true,\n      origin: this\n    });\n  }\n\n  /**\n   * Navigates to the previous page, then executes a query.\n   *\n   * Also logs the `pagePrevious` event in the usage analytics with the new current page number as meta data.\n   */\n  public previousPage() {\n    this.setPage(this.currentPage - 1, analyticsActionCauseList.pagerPrevious);\n  }\n\n  /**\n   * Navigates to the next page, then executes a query.\n   *\n   * Also logs the `pageNext` event in the usage analytics with the new current page number as meta data.\n   */\n  public nextPage() {\n    this.setPage(this.currentPage + 1, analyticsActionCauseList.pagerNext);\n  }\n\n  private getMaxNumberOfPagesForCurrentResultsPerPage() {\n    return Math.ceil(this.options.maximumNumberOfResultsFromIndex / this.searchInterface.resultsPerPage);\n  }\n\n  private handleNewQuery(data: INewQueryEventArgs) {\n    const triggeredByPager = data && data.origin && data.origin.type == Pager.ID;\n    if (this.needToReset && !triggeredByPager) {\n      this.currentPage = 1;\n      this.updateQueryStateModel(this.getFirstResultNumber(this.currentPage));\n    }\n    this.needToReset = true;\n  }\n\n  private updateQueryStateModel(attrValue: number) {\n    this.listenToQueryStateChange = false;\n    this.queryStateModel.set(QueryStateModel.attributesEnum.first, attrValue);\n    this.listenToQueryStateChange = true;\n  }\n\n  private handleQueryError() {\n    this.reset();\n  }\n\n  private handleQuerySuccess(data: IQuerySuccessEventArgs) {\n    this.reset();\n    if (this.ignoreNextQuerySuccess) {\n      this.ignoreNextQuerySuccess = false;\n    } else {\n      Assert.isNotUndefined(data);\n\n      const firstResult = data.query.firstResult;\n      const count = data.results.totalCountFiltered;\n\n      const pagerBoundary = this.computePagerBoundary(firstResult, count);\n      this.currentPage = pagerBoundary.currentPage;\n      if (pagerBoundary.end - pagerBoundary.start > 0) {\n        for (let i = pagerBoundary.start; i <= pagerBoundary.end; i++) {\n          const listItemValue = document.createElement('a');\n          $$(listItemValue).addClass(['coveo-pager-list-item-text', 'coveo-pager-anchor']);\n          $$(listItemValue).text(i.toString(10));\n\n          let listItem = $$('li', { className: 'coveo-pager-list-item', tabindex: 0 }).el;\n          if (i == this.currentPage) {\n            $$(listItem).addClass('coveo-active');\n          }\n\n          ((pageNumber: number) => {\n            let clickAction = () => this.handleClickPage(pageNumber);\n            $$(listItem).on('click', clickAction);\n            $$(listItem).on('keyup', KeyboardUtils.keypressAction(KEYBOARD.ENTER, clickAction));\n          })(i);\n\n          listItem.appendChild(listItemValue);\n          this.list.appendChild(listItem);\n        }\n\n        if (this.options.enableNavigationButton && pagerBoundary.lastResultPage > 1) {\n          this.renderNavigationButton(pagerBoundary, this.list);\n        }\n      }\n    }\n  }\n\n  private handleNoResults(data: INoResultsEventArgs) {\n    let lastValidPage;\n    if (data.results.totalCount > 0) {\n      // First scenario : The index returned less results than expected (because of folding).\n      // Recalculate the last valid page, and change to that new page.\n      const possibleValidPage = this.computePagerBoundary(data.results.totalCountFiltered, data.results.totalCount).lastResultPage;\n      if (this.currentPage > possibleValidPage) {\n        lastValidPage = possibleValidPage;\n      }\n    } else if (this.currentPage > this.getMaxNumberOfPagesForCurrentResultsPerPage()) {\n      // Second scenario : Someone tried to access a non-valid page by the URL for example, which is  higher than the current possible with the number of\n      // possible results. The last valid page will be the maximum number of results avaiable from the index.\n      lastValidPage = this.getMaxNumberOfPagesForCurrentResultsPerPage();\n    }\n\n    // This needs to be deferred because we still want all the \"querySuccess\" callbacks the complete their execution\n    // before triggering/queuing the next query;\n    // if we cannot find a lastValidPage to go to, do nothing : this means it's a query that simply return nothing.\n    if (lastValidPage != null) {\n      this.currentPage = lastValidPage;\n      data.retryTheQuery = true;\n      this.needToReset = false;\n      this.ignoreNextQuerySuccess = false;\n      this.updateQueryStateModel(this.getFirstResultNumber(this.currentPage));\n    }\n  }\n\n  private reset() {\n    $$(this.list).empty();\n  }\n\n  private handleBuildingQuery(data: IBuildingQueryEventArgs) {\n    Assert.exists(data);\n    const eventArgs = this.getQueryEventArgs();\n    data.queryBuilder.firstResult = eventArgs.first;\n\n    // Set the number of results only if it was not already set by external code\n    // Most of the time this will be set by either : the SearchInterface with the resultsPerPage option\n    // Or by the ResultsPerPage component (so the end user decides).\n    // Pager will realistically never set this value itself.\n    if (data.queryBuilder.numberOfResults == null) {\n      data.queryBuilder.numberOfResults = eventArgs.count;\n    }\n  }\n\n  private computePagerBoundary(firstResult: number, totalCount: number) {\n    const resultPerPage = this.searchInterface.resultsPerPage;\n    const currentPage = Math.floor(firstResult / resultPerPage) + 1;\n    let lastPageNumber = Math.min(Math.ceil(totalCount / resultPerPage), this.getMaxNumberOfPagesForCurrentResultsPerPage());\n    lastPageNumber = Math.max(lastPageNumber, 1);\n    const halfLength = Math.floor(this.options.numberOfPages / 2);\n    let firstPageNumber = currentPage - halfLength;\n    firstPageNumber = Math.max(firstPageNumber, 1);\n    let endPageNumber = firstPageNumber + this.options.numberOfPages - 1;\n    endPageNumber = Math.min(endPageNumber, lastPageNumber);\n    return {\n      start: firstPageNumber,\n      end: endPageNumber,\n      lastResultPage: lastPageNumber,\n      currentPage: currentPage\n    };\n  }\n\n  private renderNavigationButton(\n    pagerBoundary: { start: number; end: number; lastResultPage: number; currentPage: number },\n    list: HTMLElement\n  ) {\n    if (this.currentPage > 1) {\n      const previous = document.createElement('li');\n      $$(previous).addClass(['coveo-pager-previous', 'coveo-pager-anchor', 'coveo-pager-list-item']);\n      const buttonLink = document.createElement('a');\n      const buttonIcon = $$('span', { className: 'coveo-pager-previous-icon' }, SVGIcons.icons.pagerLeftArrow).el;\n      SVGDom.addClassToSVGInContainer(buttonIcon, 'coveo-pager-previous-icon-svg');\n      buttonLink.appendChild(buttonIcon);\n      buttonLink.setAttribute('title', l('Previous'));\n      previous.appendChild(buttonLink);\n      $$(previous).on('click', () => this.handleClickPrevious());\n      this.list.insertBefore(previous, this.list.firstChild);\n    }\n\n    if (this.currentPage < pagerBoundary.lastResultPage) {\n      const next = document.createElement('li');\n      $$(next).addClass(['coveo-pager-next', 'coveo-pager-anchor', 'coveo-pager-list-item']);\n      const buttonLink = document.createElement('a');\n      const buttonIcon = $$('span', { className: 'coveo-pager-next-icon' }, SVGIcons.icons.pagerRightArrow).el;\n      SVGDom.addClassToSVGInContainer(buttonIcon, 'coveo-pager-next-icon-svg');\n      buttonLink.appendChild(buttonIcon);\n      buttonLink.setAttribute('title', l('Next'));\n      next.appendChild(buttonLink);\n      $$(next).on('click', () => this.handleClickNext());\n      this.list.appendChild(next);\n    }\n  }\n\n  private handleQueryStateModelChanged(data: IAttributeChangedEventArg) {\n    if (!this.listenToQueryStateChange) {\n      return;\n    }\n    Assert.exists(data);\n    this.needToReset = false;\n    const firstResult = data.value;\n    this.currentPage = this.fromFirstResultsToPageNumber(firstResult);\n  }\n\n  private handleClickPage(pageNumber: number) {\n    Assert.exists(pageNumber);\n    this.setPage(pageNumber);\n  }\n\n  private handleClickPrevious() {\n    this.previousPage();\n  }\n\n  private handleClickNext() {\n    this.nextPage();\n  }\n\n  private fromFirstResultsToPageNumber(firstResult: number): number {\n    return firstResult / this.searchInterface.resultsPerPage + 1;\n  }\n\n  private getFirstResultNumber(pageNumber: number = this.currentPage): number {\n    return (pageNumber - 1) * this.searchInterface.resultsPerPage;\n  }\n\n  private getQueryEventArgs() {\n    return {\n      count: this.searchInterface.resultsPerPage,\n      first: this.getFirstResultNumber()\n    };\n  }\n}\n\nInitialization.registerAutoCreateComponent(Pager);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Pager/Pager.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sass/_Pager.scss\n// module id = 411\n// module chunks = 39 78"],"sourceRoot":""}