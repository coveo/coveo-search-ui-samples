{"version":3,"sources":["./src/utils/SVGDom.ts","./src/ui/Logo/Logo.ts"],"names":[],"mappings":"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","file":"Logo__5d8084491af1464dbdb6.js","sourcesContent":["import { IStringMap } from '../rest/GenericParam';\nimport * as _ from 'underscore';\n\nexport class SVGDom {\n  public static addClassToSVGInContainer(svgContainer: HTMLElement, classToAdd: string) {\n    const svgElement = svgContainer.querySelector('svg');\n    svgElement.setAttribute('class', `${SVGDom.getClass(svgElement)}${classToAdd}`);\n  }\n\n  public static removeClassFromSVGInContainer(svgContainer: HTMLElement, classToRemove: string) {\n    const svgElement = svgContainer.querySelector('svg');\n    svgElement.setAttribute('class', SVGDom.getClass(svgElement).replace(classToRemove, ''));\n  }\n\n  public static addStyleToSVGInContainer(svgContainer: HTMLElement, styleToAdd: IStringMap<any>) {\n    const svgElement = svgContainer.querySelector('svg');\n    _.each(styleToAdd, (styleValue, styleKey) => {\n      svgElement.style[styleKey] = styleValue;\n    });\n  }\n\n  private static getClass(svgElement: SVGElement) {\n    const className = svgElement.getAttribute('class');\n    return className ? className + ' ' : '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/SVGDom.ts","import { exportGlobally } from '../../GlobalExports';\nimport { IQuerySuccessEventArgs, QueryEvents } from '../../events/QueryEvents';\nimport { l } from '../../strings/Strings';\nimport { $$ } from '../../utils/Dom';\nimport { SVGDom } from '../../utils/SVGDom';\nimport { SVGIcons } from '../../utils/SVGIcons';\nimport { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { Initialization } from '../Base/Initialization';\n\nexport interface ILogoOptions {}\n\n/**\n * The Logo component adds a clickable Coveo logo in the search interface.\n */\nexport class Logo extends Component {\n  static ID = 'Logo';\n\n  static doExport = () => {\n    exportGlobally({\n      Logo: Logo\n    });\n  };\n\n  static options: ILogoOptions = {};\n\n  /**\n   * Creates a new Logo component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the Logo component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   */\n  constructor(public element: HTMLElement, public options?: ILogoOptions, bindings?: IComponentBindings) {\n    super(element, Logo.ID, bindings);\n    this.options = ComponentOptions.initComponentOptions(element, Logo, options);\n\n    const link = $$(\n      'a',\n      {\n        className: 'coveo-powered-by coveo-footer-logo',\n        href: 'http://www.coveo.com/',\n        'aria-label': l('CoveoHomePage')\n      },\n      SVGIcons.icons.coveoPoweredBy\n    );\n    SVGDom.addClassToSVGInContainer(link.el, 'coveo-powered-by-svg');\n    this.element.appendChild(link.el);\n\n    this.bind.onRootElement(QueryEvents.noResults, () => this.hide());\n    this.bind.onRootElement(QueryEvents.querySuccess, (data: IQuerySuccessEventArgs) => {\n      if (data.results.results.length > 0) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    });\n    this.bind.onRootElement(QueryEvents.queryError, () => this.hide());\n  }\n\n  public hide() {\n    $$(this.element).addClass('coveo-hidden');\n  }\n\n  public show() {\n    $$(this.element).removeClass('coveo-hidden');\n  }\n}\n\nInitialization.registerAutoCreateComponent(Logo);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Logo/Logo.ts"],"sourceRoot":""}