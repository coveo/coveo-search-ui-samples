{"version":3,"sources":["./src/ui/Icon/Icon.ts"],"names":[],"mappings":"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","file":"Icon__1a4919568d31ada5f0d0.js","sourcesContent":["import { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { Assert } from '../../misc/Assert';\nimport { QueryUtils } from '../../utils/QueryUtils';\nimport { Initialization } from '../Base/Initialization';\nimport { Utils } from '../../utils/Utils';\nimport { FileTypes, IFileTypeInfo } from '../Misc/FileTypes';\nimport { $$ } from '../../utils/Dom';\nimport { exportGlobally } from '../../GlobalExports';\n\n/**\n * Available options for the {@link Icon} component.\n */\nexport interface IIconOptions {\n  value?: string;\n  small?: boolean;\n  withLabel?: boolean;\n  labelValue?: string;\n}\n\n/**\n * The Icon component outputs the corresponding icon for a given file type. The component searches for a suitable icon\n * from those available in the Coveo JavaScript Search Framework. If the component finds no suitable icon, it instead\n * outputs a generic icon.\n *\n * This component is a result template component (see [Result Templates](https://developers.coveo.com/x/aIGfAQ)).\n */\nexport class Icon extends Component {\n  static ID = 'Icon';\n\n  static doExport = () => {\n    exportGlobally({\n      Icon: Icon\n    });\n  };\n\n  /**\n   * The options for the Icon\n   * @componentOptions\n   */\n  static options: IIconOptions = {\n    /**\n     * Specifies the value that the Icon component should output as its CSS class instead of the auto-selected value.\n     *\n     * Default value is `undefined`, which means that the Coveo JavaScript Search Framework outputs a suitable icon\n     * depending on the result file type.\n     */\n    value: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies whether the Icon component should output the smaller version of the icon instead of the regular one.\n     *\n     * Default value is `undefined`.\n     */\n    small: ComponentOptions.buildBooleanOption(),\n\n    /**\n     * Specifies whether the Icon component should force the output icon to display its caption/label.\n     *\n     * **Note:**\n     *\n     * > Due to limited screen real estate, setting this option to `true` has no effect on icons used inside Coveo for\n     * > Salesforce Insight Panels.\n     *\n     * Default value is `undefined`, which means that the Coveo JavaScript Search Framework determines whether the icon\n     * needs to display a caption/label depending on the result file type.\n     */\n    withLabel: ComponentOptions.buildBooleanOption(),\n\n    /**\n     * Specifies what text to display as the icon caption/label.\n     *\n     * Default value is `undefined`, which means that the Coveo JavaScript Search Framework determines what text the icon\n     * needs to display depending on the result file type.\n     */\n    labelValue: ComponentOptions.buildLocalizedStringOption()\n  };\n\n  /**\n   * Creates a new Icon component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the Icon component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The result to associate the component with.\n   */\n  constructor(public element: HTMLElement, public options?: IIconOptions, bindings?: IComponentBindings, public result?: IQueryResult) {\n    super(element, Icon.ID, bindings);\n\n    this.options = ComponentOptions.initComponentOptions(element, Icon, options);\n    this.result = this.result || this.resolveResult();\n    Assert.exists(this.result);\n\n    var possibleInternalQuickview = $$(this.element).find('.' + Component.computeCssClassNameForType('Quickview'));\n    if (!Utils.isNullOrUndefined(possibleInternalQuickview) && QueryUtils.hasHTMLVersion(this.result)) {\n      $$(this.element).addClass('coveo-with-quickview');\n      $$(this.element).on('click', () => {\n        var qv = <any>Component.get(possibleInternalQuickview);\n        qv.open();\n      });\n    }\n\n    Icon.createIcon(this.result, this.options, element, bindings);\n  }\n\n  static createIcon(result: IQueryResult, options: IIconOptions = {}, element: HTMLElement = $$('div').el, bindings?: IComponentBindings) {\n    var info = FileTypes.get(result);\n\n    if (!bindings && result.searchInterface) {\n      // try to resolve results bindings automatically\n      bindings = result.searchInterface.getBindings();\n    }\n    info = Icon.preprocessIconInfo(options, info);\n    $$(element).toggleClass('coveo-small', options.small === true);\n\n    if (options.value != undefined) {\n      if (options.small === true) {\n        if (options.value.indexOf('-small') == -1) {\n          info.icon += '-small';\n        }\n      }\n      if (options.small === false) {\n        if (options.value.indexOf('-small') != -1) {\n          info.icon = info.icon.replace('-small', '');\n        }\n      }\n    }\n    $$(element).addClass(info.icon);\n    element.setAttribute('title', info.caption);\n\n    if (Icon.shouldDisplayLabel(options, bindings)) {\n      element.appendChild(\n        $$(\n          'span',\n          {\n            className: 'coveo-icon-caption-overlay'\n          },\n          info.caption\n        ).el\n      );\n      $$(element).addClass('coveo-icon-with-caption-overlay');\n      $$(element).setAttribute('data-with-label', 'true');\n    }\n    return element;\n  }\n\n  static shouldDisplayLabel(options: IIconOptions, bindings: IComponentBindings) {\n    // If withLabel is explicitely set to false, the label will never display\n    // If withLabel is explicitely set to true, the label will always display\n    // If withLabel is set to default value (not a hard true or false), the label will display based on ./core/filetypes/**.json\n    // with the property shouldDisplayLabel set on each file type/ objecttype\n    // In this case, the generated css will take care of outputting the correct css to display : block\n    return options.withLabel !== false;\n  }\n\n  static preprocessIconInfo(options: IIconOptions, info: IFileTypeInfo) {\n    if (options.labelValue != null) {\n      info.caption = options.labelValue;\n    }\n    if (options.value != null) {\n      info.icon = 'coveo-icon ' + options.value;\n    }\n    if (info.caption == null) {\n      info.caption = '';\n    }\n    if (info.icon == null) {\n      info.icon = 'coveo-icon coveo-sprites-custom';\n    }\n    return info;\n  }\n}\nInitialization.registerAutoCreateComponent(Icon);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Icon/Icon.ts"],"sourceRoot":""}